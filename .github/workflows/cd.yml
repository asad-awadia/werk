name: CD

on:
  push:
    tags: ["*"]

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - name: Install prerequisites
        run: brew install crystal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: shards install

      - name: Build
        run: shards build --release --no-debug

      - uses: actions/upload-artifact@v2
        with:
          name: werk-macos
          path: bin/werk

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: brew install crystal-lang

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: shards install

      - name: Build
        run: shards build --release --no-debug --static

      - uses: actions/upload-artifact@v2
        with:
          name: werk-linux
          path: bin/werk

  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker build
        run: docker build -t marghidanu/werk  .

  release:
    runs-on: ubuntu-latest
    needs:
      - build-macos
      - build-linux

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: executables

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release macOS
        id: upload-werk-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./executables/werk-macos/werk
          asset_name: werk-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Linux
        id: upload-werk-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./executables/werk-linux/werk
          asset_name: werk-linux
          asset_content_type: application/octet-stream