name: CD

on:
  release:
    types:
      - published

jobs:
  build-docker:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build Docker image
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker build -t boord/werk:${{ github.event.release.tag_name }} .
          docker tag boord/werk:${{ github.event.release.tag_name }} boord/werk:latest
          docker push boord/werk:${{ github.event.release.tag_name }} boord/werk:latest

  build:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["macos-10.15", "ubuntu-20.04"]

    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1
        with:
          crystal: 0.36.0

      - name: Additional Linux dependencies
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libyaml-dev

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        if: contains(matrix.os, 'macos')
        run: shards build --release --no-debug

      - name: Build static
        if: contains(matrix.os, 'ubuntu')
        run: shards build --release --no-debug --static

      - name: Upload application
        id: upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bin/werk
          asset_name: werk-${{ runner.os }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Homebrew formula update
        if: matrix.os == 'macos-10.15' && !contains(github.event.release.tag_name, '-')
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
        uses: mislav/bump-homebrew-formula-action@v1
        with:
          formula-name: werk
          homebrew-tap: marghidanu/homebrew-werk
          base-branch: master
          download-url: ${{ steps.upload.outputs.browser_download_url }}
