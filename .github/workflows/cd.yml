name: CD

on:
  push:
    tags: ["*"]

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - name: Install prerequisites
        run: brew install crystal

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: shards install

      - name: Build
        run: shards build --release --no-debug

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: |
          brew update
          brew install crystal-lang

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: shards install

      - name: Build
        run: shards build --release --no-debug --static

  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker build
        run: docker build -t marghidanu/werk  .

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-macos
      - build-linux

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip
